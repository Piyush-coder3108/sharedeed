<!DOCTYPE html>
<html lang="en">

<head>

  <title>ShareDeed | Editor</title>
  <link rel="stylesheet" href="/css/editor_css.css">
  <!-- <style src="css/editor_css.css" type="text/css" media="screen">
    
  </style> -->
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32.png">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <!-- Noty css -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.min.css"
    integrity="sha512-0p3K0H3S6Q4bEWZ/WmC94Tgit2ular2/n0ESdfEX8l172YyQj8re1Wu9s/HT9T/T2osUw5Gx/6pAZNk3UKbESw=="
    crossorigin="anonymous" />
</head>

<body>
  <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" style="font-weight: 700;" href="/">ShareDeed</a>
      <input class="form-control ms-auto" id="title"
        style="width: 250px; background: transparent;border: none; border-bottom: 1px solid white; color: white;"
        type="text" placeholder="<%= title %>" data-bs-toggle="tooltip" data-bs-placement="bottom"
        title="Enter your Document name" onblur="changetitle()" value="<%= title %>">
      <input type="text" class="form-control" style="width: 100px; background: transparent;border: none;  color: white;"
        id="extension" data-bs-toggle="tooltip" data-bs-placement="bottom" title="File Extension">
      <ul class="navbar-nav  mb-2 mb-lg-0 ms-auto ">
        <li>
          <a class="nav-link" href="#"><i data-bs-toggle="tooltip" data-bs-placement="bottom"
              title="Run Code" onclick="runCode()">Run</i></a>
        </li>
        <li>
          <a class="nav-link" href="#"><i class="fas fa-cloud-upload-alt" data-bs-toggle="tooltip"
              data-bs-placement="bottom" title="Save" onclick="savedoc()"></i></a>
        </li>

        <li>
          <a class="nav-link" href="/create/newroom"><i class="fas fa-plus-square" data-bs-toggle="tooltip"
              data-bs-placement="bottom" title="create new page"></i></a>
        </li>
        <li>
          <a class="nav-link" href="#"><i class="fas fa-download" data-bs-toggle="tooltip" data-bs-placement="bottom"
              title="download" onclick="download_file()"></i></a>
        </li>
        <li>
          <a class="nav-link"><i class="far fa-share-square" data-bs-toggle="tooltip" data-bs-placement="bottom"
              title="Share" onclick="share_code()" onmouseout="outFunc()" id="share"></i></a>
        </li>
        <li>
          <a class="nav-link"><i class="fas fa-comment-alt" data-bs-toggle="tooltip" data-bs-placement="bottom"
              title="Chat" onclick="openNav()"></i></a>
        </li>
        <li>
          <a class="nav-link"><i class="fas fa-user-friends" data-bs-toggle="tooltip" data-bs-placement="bottom"
              title="People in call" onclick="openpeoplenav()"></i></a>
        </li>

        <li>
          <button type="button" style="background: transparent; border: none; outline: none; " class="nav-link"
            data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="fas fa-cog" data-bs-toggle="tooltip"
              data-bs-placement="bottom" title="Settings"></i></button>
        </li>
      </ul>
    </div>
  </nav>

  <div id="editor">
    <%= codecontent %>
  </div>

  <div id="mySidenav" class="message">
    <div id="message-box">
    </div>
    <div id="send-box" style=" bottom: 0; margin: 30px 0px; position: fixed;">
      <form method="post" id="send-message">
        <input type="text" placeholder="Enter your message" id="chat-box" autocomplete="off">
        <button type="submit" style="background: transparent; outline: none; border: none; color: white;"><i
            class="fas fa-paper-plane"></i></button>
      </form>
    </div>
  </div>


  <div id="peoplenav" class="peoples">
    <div style="text-align: center; font-weight: 800;  ">Active People &nbsp; <span id="user-number"
        style="font-size: 22px; font-weight: 900; color: greenyellow;">
        <%= roomusers.length %>
      </span></div>
    <hr>
    <br>
    <div id="people-list">
      <% for(var i=0;i<roomusers.length;i++){ %>
        <div class="people-l">
          <%= roomusers[i] %>
        </div>
        <% } %>
    </div>

  </div>
  <!--Setting Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Settings</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="d-flex align-items-start">
            <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
              <button class="nav-link active" id="v-pills-editor-setting-tab" data-bs-toggle="pill"
                data-bs-target="#v-pills-editor-setting" type="button" role="tab" aria-controls="v-pills-editor-setting"
                aria-selected="true">Editor Setting</button>
              <% if(admin){ %> <button class="nav-link" id="v-pills-admin-setting-tab" data-bs-toggle="pill"
                  data-bs-target="#v-pills-admin-setting" type="button" role="tab" aria-controls="v-pills-admin-setting"
                  aria-selected="false">Admin Setting</button>
                <% } %>

            </div>
            <div class="tab-content" id="v-pills-tabContent">
              <div class="tab-pane fade show active" id="v-pills-editor-setting" role="tabpanel"
                aria-labelledby="v-pills-editor-setting-tab">
                <label for="theme" class="form-label">Theme: </label>
                <select class="form-select" id="theme" aria-label="Default select example" onchange="changeTheme()">
                  <% for(var i=0;i<themes.length;i++){ %>
                    <% if(themes[i].th===theme) { %>
                      <option value="<%= themes[i].value %>" selected>
                        <%= themes[i].th %>
                      </option>
                      <% } else { %>
                        <option value="<%= themes[i].value %>">
                          <%= themes[i].th %>
                        </option>
                        <% } %>

                          <% } %>
                            <!-- <option value="dracula" selected>dracula</option>
                        <option value="ambiance">ambiance</option>
                        <option value="chaos">chaos</option>
                        <option value="clouds">clouds</option>
                        <option value="cobalt">cobalt</option>
                        <option value="dawn">dawn</option>                  
                        <option value="eclipse">eclipse</option>
                        <option value="gob">gob</option>
                        <option value="github">github</option>
                        <option value="iplastic">iplastic</option>
                        <option value="kuroir">kuroir</option>
                        <option value="merbivore">merbivore</option>
                        <option value="mono_industrial">mono industrial</option>
                        <option value="monokai">monokai</option>
                        <option value="one_dark">one dark</option>                        
                        <option value="solarized_dark">solarized dark</option>
                        <option value="solarized_light">solarized light</option>
                        <option value="terminal">terminal</option>
                        <option value="textmate">textmate</option>
                        <option value="tomorrow">tomorrow</option>
                        <option value="tomorrow_night">tomorrow night</option>
                        <option value="tomorrow_night_blue">tomorrow night blue</option>
                        <option value="tomorrow_night_bright">tomorrow night bright</option>
                        <option value="tomorrow_night_eighties">tomorrow night eighties</option>
                        <option value="twilight">twilight</option>
                        <option value="xcode">xcode</option> -->
                </select>
                <br>
                <label for="tab-size" class="form-label">Tab Size: </label>
                <select class="form-select" id="tab-size" aria-label="Default select example"
                  onchange="changetabSize()">
                  <% for(var i=2 ;i<=10;i=i+2){ %>
                    <% if(i==parseInt(tabsize)) { %>
                      <option value="<%= i%>" selected>
                        <%= i%>
                      </option>
                      <% } else{ %>
                        <option value="<%= i%>">
                          <%= i%>
                        </option>
                        <% } %>

                          <% } %>
                </select>
                <% if(admin) { %>
                  <br>
                  <label for="syntax" class="form-label">Syntax: </label>
                  <select class="form-select" id="syntax" aria-label="Default select example" onchange="changeMode()">
                    <option value="temp" selected >Change extension</option>
                    <option value="objectivec">C</option>
                    <option value="c_cpp">C++</option>
                    <option value="csharp">csharp</option>
                    <option value="css">css</option>
                    <option value="dart">dart</option>
                    <option value="django">django</option>
                    <option value="ejs">ejs</option>
                    <option value="gitignore">gitignore</option>
                    <option value="golang">golang</option>
                    <option value="handlebars">handlebar</option>
                    <option value="html">html</option>
                    <option value="java">java</option>
                    <option value="javascript">javascript</option>
                    <option value="json">json</option>
                    <option value="jsx">jsx</option>
                    <option value="kotlin">kotlin</option>
                    <option value="matlab">matlab</option>
                    <option value="mysql">mysql</option>
                    <option value="perl">perl</option>
                    <option value="php">php</option>
                    <option value="plain_text">plain text</option>
                    <option value="python">python</option>
                    <option value="ruby">ruby</option>
                    <option value="sass">sass</option>
                    <option value="scala">scala</option>
                    <option value="scss">scss</option>
                    <option value="sql">sql</option>
                    <option value="swift">swift</option>
                    <option value="typescript">typescript</option>
                    <option value="xml">xml</option>

                  </select>
                  <br>
                  <% } %>

                    <label for="font-size" class="form-label">Font Size: </label>
                    <select class="form-select" id="font-size" aria-label="Default select example"
                      onchange="changeFontSize()">
                      <% for(var i=10 ;i<=30;i=i+2){ %>
                        <% if(i==parseInt(fontsize)) { %>
                          <option value="<%= i%>" selected>
                            <%= i%>px
                          </option>
                          <% } else{ %>
                            <option value="<%= i%>">
                              <%= i%>px
                            </option>
                            <% } %>

                              <% } %>
                    </select>
              </div>



              <% if(admin) { %>
                <div class="tab-pane fade" id="v-pills-admin-setting" role="tabpanel"
                  aria-labelledby="v-pills-admin-setting-tab">Admin Setting Page</div>
                <% } %>
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
    integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
    integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js"
    integrity="sha512-GZ1RIgZaSc8rnco/8CXfRdCpDxRCphenIiZ2ztLy3XQfCbQUSCuk8IudvNHxkRA3oUg6q0qejgN/qqyG1duv5Q=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <!-- Noty js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.min.js"
    integrity="sha512-lOrm9FgT1LKOJRUXF3tp6QaMorJftUjowOWiDcG5GFZ/q7ukof19V0HKx/GWzXCdt9zYju3/KhBNdCLzK8b90Q=="
    crossorigin="anonymous"></script>
  <script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/<%= theme %>");
    // editor.session.setMode("ace/mode/java");
    editor.setReadOnly(false);
    editor.setShowPrintMargin(false);
    var changes_made = false;
    var doc_title;

    editor.session.setMode(`ace/mode/<%= syntax %>`);

    editor.session.setTabSize(parseInt('<%= tabsize %>'));
    editor.setFontSize(parseInt('<%= fontsize %>'));
    // Disabling the extension change 
    document.getElementById('extension').disabled = true;

    // Getting site url
    const url=window.location.href;

    var extensions = {
      "objectivec": ".c",
      "c_cpp": ".cpp",
      "csharp": ".cs",
      "css": ".css",
      "dart": ".dart",
      "django": ".py",
      "ejs": ".ejs",
      "gitignore": ".gitignore",
      "golang": ".go",
      "handlebars": ".hbs",
      "html": ".html",
      "java": ".java",
      "javascript": ".js",
      "json": ".json",
      "jsx": ".jsx",
      "kotlin": ".kt",
      "matlab": ".mat",
      "mysql": ".frm",
      "perl": ".perl",
      "php": ".php",
      "plain_text": ".txt",
      "python": ".py",
      "ruby": ".ruby",
      "sass": ".sass",
      "scala": ".scala",
      "scss": ".scss",
      "sql": ".sql",
      "swift": ".swift",
      "typescript": ".ts",
      "xml": ".xml",
    }
    var ext = extensions['<%= syntax %>'];
    document.getElementById('extension').value = ext;
    var mainSyntax='<%= syntax %>';

    var admin = '<%= admin %>';
    const roomid = '<%= roomid %>';
    const username = '<%= username %>';

    var cam = false;
    var mic = false;

    const socket = io();

    socket.emit('join-room', { roomid, username });

    let allowed = true;

    socket.on("code", (data) => {
      allowed = false;
      editor.setValue(data);
      allowed = true;
    });

    editor.on("change", (e) => {

      if (allowed) {
        changes_made = true;
        add_event_changes();
        socket.emit('code-change', { code: editor.getValue(), roomid });
      }
    });

    socket.on('new-user', (data) => {
      if (data !== username) {
        new Noty({
          theme: 'relax',
          text: `${data} joined the room`,
          type: 'alert',
          layout: 'bottomLeft',
          timeout: 1500
        }).show();
      }
    });

    function changeTheme() {
      var theme = document.getElementById('theme').value;
      editor.setTheme(`ace/theme/${theme}`);
      updatemyeditor({ theme, tabsize: 'null', fontsize: 'null' });
    }

    function changetabSize() {
      var tabsize = document.getElementById('tab-size').value;
      editor.session.setTabSize(tabsize);
      updatemyeditor({ theme: 'null', tabsize, fontsize: 'null' });
    }

    function changetitle() {
      var title = document.getElementById('title').value;
      doc_title = title;
      if (admin === 'true') {
        socket.emit('changed-title', { title, roomid });
      }
    }

    function changeFontSize() {
      var fontsize = document.getElementById('font-size').value;
      editor.setFontSize(parseInt(fontsize));
      updatemyeditor({ theme: 'null', tabsize: 'null', fontsize });
    }

    function updatemyeditor(newsetting) {
      const opt = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(newsetting),
      };
      fetch('/change/editor/setting', opt)
        .then(data => console.log(data))
        .catch(err => console.log(err));
    }

    socket.on('title-change', (title) => {
      document.getElementById('title').value = title;
      doc_title = title;
    })

    function runCode(){
      var x=document.createElement('TEXTAREA');
      x.display="none";
      x.value=editor.getValue();
      const options = {
        method: 'POST',
        mode: 'cors',
        body: {
          "clientId": "c0c9fe76355f6e31a94db5ff3d81949e",
          "clientSecret": "6d715651f9b95f1d826599387c5594793fdb241cc5bd64484e82290e45b4de5d",
          "script": `${x.value}`,
          "language": `${mainSyntax}`,
          "versionIndex": "0"
        },
        headers: {
          'Content-Type': 'application/json; charset=UTF-8',
        }
      };
      fetch(`https://api.jdoodle.com/v1/execute`, options)
        .then(response => response.json())
        .then(data => {
          console.log(data);
          if (data.success) {
            new Noty({
              theme: 'relax',
              text: "  Extension changed successfully ",
              type: 'success',
              layout: 'topRight',
              timeout: 1500
            }).show();
          }
          else {
            new Noty({
              theme: 'relax',
              text: "Server error try again later",
              type: 'error',
              layout: 'topRight',
              timeout: 1500
            }).show();
          }
        });

    }

    function changeMode() {
      var syntax = document.getElementById('syntax').value;
      if(syntax==='temp'){
        new Noty({
              theme: 'relax',
              text: "Please choose valid option !!!",
              type: 'error',
              layout: 'topRight',
              timeout: 1500
            }).show();
        return;
      }
      mainSyntax=syntax;
      ext = extensions[syntax];
      document.getElementById('extension').value = ext;
      editor.session.setMode(`ace/mode/${syntax}`);
      if (admin === 'true') {
        socket.emit('changed-mode', { syntax, roomid });
        change_mode_api(syntax);
      }
    }

    socket.on('mode-change', (syntax) => {
      new Noty({
              theme: 'relax',
              text: "Please Note: Admin changed the file extension",
              type: 'success',
              layout: 'topRight',
              timeout: 1500
            }).show();
      ext = extensions[syntax];
      document.getElementById('extension').value = ext;
      editor.session.setMode(`ace/mode/${syntax}`);
    })



    function change_mode_api(syntax) {
      const update = {
        extension: `${syntax}`
      };
      const options = {
        method: 'POST',
        body: JSON.stringify(update),
        headers: {
          'Content-Type': 'application/json; charset=UTF-8',
        }
      };
      fetch(`${url}/data/update/ext`, options)
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            new Noty({
              theme: 'relax',
              text: "  Extension changed successfully ",
              type: 'success',
              layout: 'topRight',
              timeout: 1500
            }).show();
          }
          else {
            new Noty({
              theme: 'relax',
              text: "Server error try again later",
              type: 'error',
              layout: 'topRight',
              timeout: 1500
            }).show();
          }
        });


    }

    function share_code() {
      var copyText = window.location.href;
      navigator.clipboard.writeText(copyText);
      document.getElementById('share').setAttribute('data-bs-original-title', 'Link Copied!');
      let btn_tooltip = bootstrap.Tooltip.getInstance(document.getElementById('share'));
      btn_tooltip.show();
    }
    function outFunc() {
      document.getElementById('share').setAttribute('data-bs-original-title', 'Share');
    }

    function download_file() {
      if (doc_title != undefined && doc_title.length > 0) {
        var text = editor.getValue();
        var filename = doc_title + ext;
        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8, ' + encodeURIComponent(text));
        element.setAttribute('download', filename);
        document.body.appendChild(element);
        element.click();
      }
      else {
        alert("Please give document name");
      }
    }
    var openchatbox = false;
    /* Set the width of the side navigation to 250px */
    function openNav() {
      if (document.getElementById("mySidenav").style.right === "0px") {
        openchatbox = false;
        document.getElementById('message-box').style.display = "none";
        document.getElementById('send-box').style.display = "none";
        document.getElementById("mySidenav").style.right = "-500px";
      }
      else {
        openchatbox = true;
        document.getElementById("peoplenav").style.right = "-500px";
        document.getElementById("mySidenav").style.right = "0px";
        setTimeout(() => {
          document.getElementById('message-box').style.display = "block";
          document.getElementById('send-box').style.display = "block";
        }, 400);
      }
    }

    function openpeoplenav() {
      if (document.getElementById("peoplenav").style.right === "0px") {
        document.getElementById("peoplenav").style.right = "-500px";
      }
      else {
        document.getElementById('message-box').style.display = "none";
        document.getElementById('send-box').style.display = "none";
        document.getElementById("mySidenav").style.right = "-500px";
        document.getElementById("peoplenav").style.right = "0px";
      }
    }

    function before_unload(event) {
      event.returnValue = "Write something clever here..";
    }

    function savedoc() {
      if (document.getElementById('title').value.length == 0) {
        alert("Please add Document Name");
        return;
      }
      if (!changes_made) {
        alert("Please made some changes !!!!");
        return;
      }

      save_doc_api_call();

    }

    async function save_doc_api_call() {
      const update = {
        'title': document.getElementById('title').value,
        'content': editor.getValue(),
        'user': username,
      };
      const options = {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(update),
      };
      const response = await fetch(`${url}/data`, options);
      const data = await response.json();
      window.removeEventListener('beforeunload', before_unload);
      if (data.success) {

        new Noty({
          theme: 'relax',
          text: "  Code saved successfully ",
          type: 'success',
          layout: 'topRight',
          timeout: 1500
        }).show();
      }
      else {
        new Noty({
          theme: 'relax',
          text: "Server error try again later",
          type: 'error',
          layout: 'topRight',
          timeout: 1500
        }).show();
      }
    }

    function add_event_changes() {
      window.addEventListener("beforeunload", before_unload);
    }

    document.getElementById('send-message').addEventListener('submit', (e) => {
      e.preventDefault();
      var mymessage = document.getElementById('chat-box').value;
      if (mymessage.length < 1) {
        return;
      }
      document.getElementById('chat-box').value = "";
      append(username, mymessage, 'right');
      socket.emit('send', ({ message: mymessage, roomid, username }));
    });

    socket.on('receive', ({ data, user }) => {
      append(user, data, 'left');
      if (!openchatbox) {
        new Noty({
          theme: 'relax',
          text: `You have new message from ${user}`,
          type: 'alert',
          layout: 'bottomRight',
          timeout: 1500
        }).show();
      }
    })

    function append(user, data, position) {
      const messageElement = document.createElement('div');
      const messageElement1 = document.createElement('div');
      messageElement.innerHTML = user;
      messageElement.classList.add("message-user");
      messageElement.classList.add(position);
      messageElement1.innerHTML = data;
      messageElement1.classList.add("chat-message");
      messageElement1.classList.add(position);
      document.getElementById('message-box').append(messageElement);
      document.getElementById('message-box').append(messageElement1);
      var messageBody = document.querySelector('#message-box');
      messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;

    }

    socket.on('users-list', (list) => {
      document.getElementById('people-list').innerHTML = "";
      document.getElementById('user-number').innerText = list.length;
      for (var i = 0; i < list.length; i++) {
        const newdiv = document.createElement('div');
        newdiv.classList.add('people-l');
        newdiv.innerText = list[i];
        document.getElementById('people-list').append(newdiv);
      }
    })     
  </script>

</body>

</html>